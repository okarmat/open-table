@model OpenTable.ViewModels.CreateReservationViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<body onload="initTableReservationView('@Model.Tables')">
</body>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>@Model.RestaurantName</h4>
    <hr />

    @Html.TextBoxFor(model => model.ReservationDate, new { type = "datetime-local" })

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ReservingPersonEmail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ReservingPersonEmail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReservingPersonEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="restaurant"></div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input value="Reserve selected table" class="btn btn-success" onclick="reserve(@Html.DisplayFor(r => r.ReservingPersonEmail),@Html.DisplayFor(r => r.ReservationDate)/>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/Scripts/jquery-ui.js")
    @Scripts.Render("~/Scripts/material.min.js")
    @Scripts.Render("~/Scripts/table-management.js")
}